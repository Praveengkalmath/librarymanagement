{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GANESH\\\\OneDrive\\\\Desktop\\\\react\\\\Mainproject\\\\src\\\\Component\\\\addbook.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"../Style/addbook.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddBook = () => {\n  _s();\n  //title,categories,authors,pageCount,shortDescription.longDescription,thumbnailUrl\n  let [title, setTitle] = useState([]);\n  let [categories, setCategories] = useState([]);\n  let [authors, setAuthors] = useState([]);\n  let [pageCount, setPageCount] = useState([]);\n  let [shortDescription, setShortDescription] = useState([]);\n  let [longDescription, setLongDescription] = useState([]);\n  let [thumbnailUrl, setThumbnailUrl] = useState([]);\n  let reset = () => {\n    setTitle(\"\");\n    setCategories(\"\");\n    setAuthors(\"\");\n    setPageCount(\"\");\n    setShortDescription(\"\");\n    setLongDescription(\"\");\n    setThumbnailUrl(\"\");\n  };\n  let handleSubmit = e => {\n    e.preventDefault(); //use to prevent from reloading while submit\n    //data to the server\n    let bookData = {\n      title,\n      categories,\n      authors,\n      pageCount,\n      shortDescription,\n      longDescription,\n      thumbnailUrl\n    };\n\n    //post data to server\n    fetch(`http://localhost:2002/books`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(bookData)\n    });\n    alert(\"book added successfully......!!\");\n    navigate('/admin/book-list');\n  };\n  let navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"addBook\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ADD A BOOK\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form4\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: \"Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: title,\n            onChange: e => setTitle(e.target.value),\n            placeholder: \"Title of the Book\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"categories\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: \"Categories:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: categories,\n            onChange: e => setCategories(e.target.value),\n            placeholder: \"categories of the Book\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"authors\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: \"Authors:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: authors,\n            onChange: e => setAuthors(e.target.value),\n            placeholder: \"authors of the Book\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pageCount\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: \"PageCount:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: pageCount,\n            onChange: e => setPageCount(e.target.value),\n            placeholder: \"pageCount of the Book\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"shortDescription\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: \"shortDescription:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            cols: \"30\",\n            rows: \"10\",\n            placeholder: \"shortDescription of the Book\",\n            required: true,\n            value: shortDescription,\n            onChange: e => setShortDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"longDescription\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: \"longDescription:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            cols: \"30\",\n            rows: \"10\",\n            placeholder: \"longDescription of the Book\",\n            required: true,\n            value: longDescription,\n            onChange: e => setLongDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"thumbnailUrl\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: \"thumbnailUrl:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: thumbnailUrl,\n            onChange: e => setThumbnailUrl(e.target.value),\n            placeholder: \"ThumbnailUrl of the Book\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"ADD BOOK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"reset\",\n          onClick: reset,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(AddBook, \"t/fHgnO+KWlKJzum6yQND5eLhxY=\", false, function () {\n  return [useNavigate];\n});\n_c = AddBook;\nexport default AddBook;\nvar _c;\n$RefreshReg$(_c, \"AddBook\");","map":{"version":3,"names":["useState","useNavigate","AddBook","title","setTitle","categories","setCategories","authors","setAuthors","pageCount","setPageCount","shortDescription","setShortDescription","longDescription","setLongDescription","thumbnailUrl","setThumbnailUrl","reset","handleSubmit","e","preventDefault","bookData","fetch","method","headers","body","JSON","stringify","alert","navigate","target","value"],"sources":["C:/Users/GANESH/OneDrive/Desktop/react/Mainproject/src/Component/addbook.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport \"../Style/addbook.css\"\r\nimport { useNavigate } from \"react-router-dom\";\r\nconst AddBook = () => {\r\n  //title,categories,authors,pageCount,shortDescription.longDescription,thumbnailUrl\r\n  let [title, setTitle] = useState([]);\r\n  let [categories, setCategories] = useState([]);\r\n  let [authors, setAuthors] = useState([]);\r\n  let [pageCount, setPageCount] = useState([]);\r\n  let [shortDescription, setShortDescription] = useState([]);\r\n  let [longDescription, setLongDescription] = useState([]);\r\n  let [thumbnailUrl, setThumbnailUrl] = useState([]);\r\n\r\n  let reset = () => {\r\n    setTitle(\"\");\r\n    setCategories(\"\");\r\n    setAuthors(\"\");\r\n    setPageCount(\"\");\r\n    setShortDescription(\"\");\r\n    setLongDescription(\"\");\r\n    setThumbnailUrl(\"\");\r\n  };\r\n  let handleSubmit = (e) => {\r\n    e.preventDefault(); //use to prevent from reloading while submit\r\n    //data to the server\r\n    let bookData = {\r\n      title,\r\n      categories,\r\n      authors,\r\n      pageCount,\r\n      shortDescription,\r\n      longDescription,\r\n      thumbnailUrl,\r\n    };\r\n   \r\n    //post data to server\r\n    fetch(`http://localhost:2002/books`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body:JSON.stringify(bookData)\r\n    });\r\n    alert(\"book added successfully......!!\")\r\n    navigate('/admin/book-list')\r\n  };\r\n  let navigate = useNavigate();\r\n  return (\r\n    <div className=\"addBook\">\r\n      <h1>ADD A BOOK</h1>\r\n      <div className=\"form4\">\r\n        <form action=\"\" onSubmit={handleSubmit}>\r\n          <div className=\"title\">\r\n            <label htmlFor=\"\">Title:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              placeholder=\"Title of the Book\"\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"categories\">\r\n            <label htmlFor=\"\">Categories:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={categories}\r\n              onChange={(e) => setCategories(e.target.value)}\r\n              placeholder=\"categories of the Book\"\r\n            />\r\n          </div>\r\n          <div className=\"authors\">\r\n            <label htmlFor=\"\">Authors:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={authors}\r\n              onChange={(e) => setAuthors(e.target.value)}\r\n              placeholder=\"authors of the Book\"\r\n            />\r\n          </div>\r\n          <div className=\"pageCount\">\r\n            <label htmlFor=\"\">PageCount:</label>\r\n            <input\r\n              type=\"number\"\r\n              value={pageCount}\r\n              onChange={(e) => setPageCount(e.target.value)}\r\n              placeholder=\"pageCount of the Book\"\r\n            />\r\n          </div>\r\n          <div className=\"shortDescription\">\r\n            <label htmlFor=\"\">shortDescription:</label>\r\n            <textarea\r\n              cols=\"30\"\r\n              rows=\"10\"\r\n              placeholder=\"shortDescription of the Book\"\r\n              required\r\n              value={shortDescription}\r\n              onChange={(e) => setShortDescription(e.target.value)}\r\n            ></textarea>\r\n          </div>\r\n          <div className=\"longDescription\">\r\n            <label htmlFor=\"\">longDescription:</label>\r\n            <textarea\r\n              cols=\"30\"\r\n              rows=\"10\"\r\n              placeholder=\"longDescription of the Book\"\r\n              required\r\n              value={longDescription}\r\n              onChange={(e) => setLongDescription(e.target.value)}\r\n            ></textarea>\r\n          </div>\r\n\r\n          <div className=\"thumbnailUrl\">\r\n            <label htmlFor=\"\">thumbnailUrl:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={thumbnailUrl}\r\n              onChange={(e) => setThumbnailUrl(e.target.value)}\r\n              placeholder=\"ThumbnailUrl of the Book\"\r\n            />\r\n          </div>\r\n          <button type=\"submit\">ADD BOOK</button>\r\n          <button type=\"reset\" onClick={reset}>\r\n            Reset\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddBook;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}